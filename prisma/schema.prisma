// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pharmacy {
  id        Int      @id @default(autoincrement())
  name      String
  address   String
  phone     String?
  createdAt DateTime @default(now())

  medicines Medicine[]
  users     User[]
}

model Medicine {
  id          Int      @id @default(autoincrement())
  name        String
  price       Float
  description String?
  form        String
  inStock     Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  pharmacyId Int
  pharmacy   Pharmacy @relation(fields: [pharmacyId], references: [id])

  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  typeId Int
  type   MedicineType @relation(fields: [typeId], references: [id])

  createdById Int?
  createdBy   User? @relation("CreatedMedicines", fields: [createdById], references: [id])
}

model Category {
  id        Int        @id @default(autoincrement())
  name      String
  medicines Medicine[]
}

model MedicineType {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  medicines Medicine[]
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  password   String
  name       String
  pharmacy   Pharmacy? @relation(fields: [pharmacyId], references: [id])
  pharmacyId Int?
  createdAt  DateTime  @default(now())

  medicines Medicine[] @relation("CreatedMedicines")
}
